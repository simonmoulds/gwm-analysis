# Main entrypoint of the workflow. 
# Please follow the best practices: 
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,
# in particular regarding the standardized folder structure mentioned there. 
import os

# CONFIG = 'config/config.yml'
# configfile: CONFIG

module jules_mosart:
    snakefile:
        github("simonmoulds/jules-mosart", path="workflow/Snakefile", branch="main")
    config:
        config

rule all:
    input:
        'results/regrid_filenames.txt'
        # 'results/irrigation_policy_maps'
        # 'results/fig/fig1.png',
        # 'results/fig/fig2.png',
        # 'results/fig/fig3.png',
        # 'results/fig/fig4.png'

use rule regrid_jules_output from jules_mosart as jules_mosart_regrid_jules_output with:
    output:
        'results/regrid_filenames.txt'

# rule prepare_command_areas:
#     input:
#         script='workflow/scripts/prepare-command-areas.R'

# rule make_irrig_policy:
#     input:
#         script='workflow/scripts/make-irrig-policy.R'
#     output:
#         directory('results/irrigation_policy_maps')
#     params:
#         None
#     resources:
#         time = '00:30:00',
#         mem_mb = 4000,
#         partition = 'short'
#     shell:
#         """
#         Rscript {input.script} {output}
#         """

# TODO put `process_jules_output` and `select_gleam_data` as part
# of Snakefile_0, because hopefully it will not change as frequently
# as the other parts of the workflow
# TODO this will have to be done on a server (JULES output too large)
# TODO it also relies on jules-mosart having been run
# rule process_jules_output:
#     input:
#         script='workflow/scripts/process-jules-output.py'
#     output:
#         directory()
#     params:
#         None
#     resources:
#         time = '00:30:00',
#         mem_mb = 4000,
#         partition = 'short'
#     shell:
#         """
#         Rscript {input.script} {output}
#         """

# rule select_gleam_data:
#     input:
#         script='workflow/scripts/select-gleam-data.sh'

# rule validate_jules_output:
#     input:
#         script='workflow/scripts/validate-jules-output.R'

rule compute_water_balance:
    input:
        script='workflow/scripts/compute-water-balance.R'
    output:
        directory('results/analysis')
    params:
        None
    resources:
        time = '00:30:00',
        mem_mb = 4000,
        partition = 'short'
    shell:
        """
        Rscript {input.script} {output}
        """

rule make_plots:
    input:
        script='workflow/scripts/make-plots.R'
    output:
        directory('results/fig')
    params:
        None
    resources:
        time = '00:30:00',
        mem_mb = 4000,
        partition = 'short'
    shell:
        """
        Rscript {input.script} {output}
        """
