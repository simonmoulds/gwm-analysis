# Main entrypoint of the workflow. 
# Please follow the best practices: 
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,
# in particular regarding the standardized folder structure mentioned there. 
import os

JULES_MOSART='/home/cenv0857/jules-mosart'
JULES_MOSART_CONFIG='config/gwm-jm-arc-config.yml'
CONFIG='config/gwm-arc-config.yml'

configfile: JULES_MOSART_CONFIG

STEMS = config['jules']['id_stem']

module jules_mosart:
    snakefile: github("simonmoulds/jules-mosart", path="workflow/Snakefile", branch="main")
    config: config

rule all:
    input:
        # expand('results/regrid_filenames_{stem}.txt', stem=STEMS),
        # expand('results/aggregate_month_filenames_{stem}.txt', stem=STEMS),
        # expand('results/resample_filenames_{stem}.txt', stem=STEMS),
        # expand('results/relative_irrigation_filenames_{stem}.txt', stem=STEMS)
        expand('results/relative_irrigation_filenames_month_{stem}.txt', stem=STEMS)

use rule regrid_jules_output from jules_mosart as jules_mosart_regrid_jules_output with:
    input:
        script=os.path.join(
            JULES_MOSART,
            'workflow/scripts/regrid-jules-output.py'
        ),
        config=JULES_MOSART_CONFIG

use rule aggregate_jules_output_month from jules_mosart as jules_mosart_aggregate_jules_output_month with:
    input:
        regrid_filenames='results/regrid_filenames_{stem}.txt',
        script=os.path.join(
            JULES_MOSART,
            'workflow/scripts/aggregate-jules-output.py'
        ),
        config=JULES_MOSART_CONFIG

use rule resample_jules_output from jules_mosart as jules_mosart_resample_jules_output with:
    input:
        regrid_filenames='results/regrid_filenames_{stem}.txt',
        script=os.path.join(
            JULES_MOSART,
            'workflow/scripts/resample-jules-output.py'
        ),
        config=JULES_MOSART_CONFIG

rule process_jules_output:
    input:
        regrid_filenames='results/regrid_filenames_{stem}.txt',
        script='workflow/scripts/process-jules-output.py',
        config=CONFIG
    output:
        'results/relative_irrigation_filenames_{stem}.txt'
    params:
        None
    resources:
        time = '00:30:00',
        mem_mb = 4000,
        partition = 'short'
    conda:
        'jules_mosart'
    shell:
        """
        python {input.script} -i {input.regrid_filenames} -o {output} --config {input.config}
        """

rule aggregate_relative_irrigation_output_month:
    input:
        rel_irrig_filenames='results/relative_irrigation_filenames_{stem}.txt',
        script='workflow/scripts/aggregate-jules-irrigation-month.py',
        config=CONFIG
    output:
        'results/relative_irrigation_filenames_month_{stem}.txt'
    params:
        None
    resources:
        time = '00:30:00',
        mem_mb = 4000,
        partition = 'short'
    conda:
        'jules_mosart'
    shell:
        """
        python {input.script} -i {input.rel_irrig_filenames} -o {output} --config {input.config}
        """
#
# rule prepare_command_areas:
#     input:
#         script='workflow/scripts/prepare-command-areas.R'

# rule make_irrig_policy:
#     input:
#         script='workflow/scripts/make-irrig-policy.R'
#     output:
#         directory('results/irrigation_policy_maps')
#     params:
#         None
#     resources:
#         time = '00:30:00',
#         mem_mb = 4000,
#         partition = 'short'
#     shell:
#         """
#         Rscript {input.script} {output}
#         """

# rule select_gleam_data:
#     input:
#         script='workflow/scripts/select-gleam-data.sh'

# rule validate_jules_output:
#     input:
#         script='workflow/scripts/validate-jules-output.R'

# rule compute_water_balance:
#     input:
#         script='workflow/scripts/compute-water-balance.R'
#     output:
#         directory('results/analysis')
#     params:
#         None
#     resources:
#         time = '00:30:00',
#         mem_mb = 4000,
#         partition = 'short'
#     shell:
#         """
#         Rscript {input.script} {output}
#         """

# rule make_plots:
#     input:
#         script='workflow/scripts/make-plots.R'
#     output:
#         directory('results/fig')
#     params:
#         None
#     resources:
#         time = '00:30:00',
#         mem_mb = 4000,
#         partition = 'short'
#     shell:
#         """
#         Rscript {input.script} {output}
#         """
